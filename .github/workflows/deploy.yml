name: Deploy
on:
  push:
    branches: master
  pull_request:
    branches: master

jobs:
  deploy:
    name: Deploy
    runs-on: ubuntu-latest

    permissions:
      id-token: write # Needed for auth with Deno Deploy
      contents: read # Needed to clone the repository

    steps:
      - name: Clone repository
        uses: actions/checkout@v4

      - name: Install Deno
        uses: denoland/setup-deno@v2
        with:
          deno-version: v2.x

      - name: Setup Bun
        uses: oven-sh/setup-bun@v1
        with:
          bun-version: latest

      - name: Cache Bun dependencies
        uses: actions/cache@v3
        with:
          path: ~/.bun/install/cache
          key: ${{ runner.os }}-bun-${{ hashFiles('**/bun.lockb') }}
          restore-keys: |
            ${{ runner.os }}-bun-

      - name: Install dependencies
        working-directory: ./client
        run: bun install --frozen-lockfile

      - name: Build application
        working-directory: ./client
        run: bun run build

      - name: Configure build directory
        run: |
          # Create a _redirects file for SPA routing if it doesn't exist
          echo "/* /index.html 200" > ./client/dist/_redirects
          # Create a basic deno.json configuration if needed
          echo '{"compilerOptions":{"jsx":"react-jsx"}}' > ./client/dist/deno.json

      - name: Upload to Deno Deploy
        uses: denoland/deployctl@v1
        with:
          project: "shreyanshaw-glimpse-91"
          entrypoint: "https://deno.land/std@0.217.0/http/file_server.ts"
          root: "client/dist"
          no-static: false
          import-map: './client/dist/deno.json'


